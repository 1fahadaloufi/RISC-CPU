/* Generated by Yosys 0.29 (git sha1 9c5a60eb201, clang 14.0.3 -fPIC -Os) */

(* top =  1  *)
(* src = "source/alu/alu.sv:1.1-31.10" *)
module alu(A, B, FN, Y);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  (* src = "source/alu/alu.sv:2.24-2.25" *)
  input [31:0] A;
  wire [31:0] A;
  (* src = "source/alu/alu.sv:2.27-2.28" *)
  input [31:0] B;
  wire [31:0] B;
  (* src = "source/alu/alu.sv:3.22-3.24" *)
  input [5:0] FN;
  wire [5:0] FN;
  (* src = "source/alu/alu.sv:5.24-5.25" *)
  output [31:0] Y;
  wire [31:0] Y;
  (* src = "source/alu/alu.sv:8.30-8.37" *)
  wire [31:0] arith_o;
  (* src = "source/alu/alu.sv:8.22-8.28" *)
  wire [31:0] bool_o;
  (* src = "source/alu/alu.sv:8.39-8.44" *)
  wire [31:0] cmp_o;
  (* src = "source/alu/alu.sv:9.7-9.8" *)
  wire n;
  (* src = "source/alu/alu.sv:8.13-8.20" *)
  wire [31:0] shift_o;
  (* src = "source/alu/alu.sv:9.13-9.14" *)
  wire v;
  (* src = "source/alu/alu.sv:9.10-9.11" *)
  wire z;
  INVX1 _069_ (
    .A(FN[5]),
    .Y(_000_)
  );
  AND2X1 _070_ (
    .A(FN[4]),
    .B(_000_),
    .Y(_001_)
  );
  AND2X1 _071_ (
    .A(FN[4]),
    .B(FN[5]),
    .Y(_002_)
  );
  AOI22X1 _072_ (
    .A(arith_o[0]),
    .B(_001_),
    .C(_002_),
    .D(shift_o[0]),
    .Y(_003_)
  );
  NOR2X1 _073_ (
    .A(FN[4]),
    .B(_000_),
    .Y(_004_)
  );
  NOR2X1 _074_ (
    .A(FN[4]),
    .B(FN[5]),
    .Y(_005_)
  );
  AOI22X1 _075_ (
    .A(bool_o[0]),
    .B(_004_),
    .C(_005_),
    .D(cmp_o[0]),
    .Y(_006_)
  );
  NAND2X1 _076_ (
    .A(_003_),
    .B(_006_),
    .Y(Y[0])
  );
  AOI22X1 _077_ (
    .A(arith_o[1]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[1]),
    .Y(_007_)
  );
  AOI22X1 _078_ (
    .A(shift_o[1]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[1]),
    .Y(_008_)
  );
  NAND2X1 _079_ (
    .A(_007_),
    .B(_008_),
    .Y(Y[1])
  );
  AOI22X1 _080_ (
    .A(arith_o[2]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[2]),
    .Y(_009_)
  );
  AOI22X1 _081_ (
    .A(shift_o[2]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[2]),
    .Y(_010_)
  );
  NAND2X1 _082_ (
    .A(_009_),
    .B(_010_),
    .Y(Y[2])
  );
  AOI22X1 _083_ (
    .A(arith_o[3]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[3]),
    .Y(_011_)
  );
  AOI22X1 _084_ (
    .A(shift_o[3]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[3]),
    .Y(_012_)
  );
  NAND2X1 _085_ (
    .A(_011_),
    .B(_012_),
    .Y(Y[3])
  );
  AOI22X1 _086_ (
    .A(arith_o[4]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[4]),
    .Y(_013_)
  );
  AOI22X1 _087_ (
    .A(shift_o[4]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[4]),
    .Y(_014_)
  );
  NAND2X1 _088_ (
    .A(_013_),
    .B(_014_),
    .Y(Y[4])
  );
  AOI22X1 _089_ (
    .A(arith_o[5]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[5]),
    .Y(_015_)
  );
  AOI22X1 _090_ (
    .A(shift_o[5]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[5]),
    .Y(_016_)
  );
  NAND2X1 _091_ (
    .A(_015_),
    .B(_016_),
    .Y(Y[5])
  );
  AOI22X1 _092_ (
    .A(arith_o[6]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[6]),
    .Y(_017_)
  );
  AOI22X1 _093_ (
    .A(shift_o[6]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[6]),
    .Y(_018_)
  );
  NAND2X1 _094_ (
    .A(_017_),
    .B(_018_),
    .Y(Y[6])
  );
  AOI22X1 _095_ (
    .A(arith_o[7]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[7]),
    .Y(_019_)
  );
  AOI22X1 _096_ (
    .A(shift_o[7]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[7]),
    .Y(_020_)
  );
  NAND2X1 _097_ (
    .A(_019_),
    .B(_020_),
    .Y(Y[7])
  );
  AOI22X1 _098_ (
    .A(arith_o[8]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[8]),
    .Y(_021_)
  );
  AOI22X1 _099_ (
    .A(shift_o[8]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[8]),
    .Y(_022_)
  );
  NAND2X1 _100_ (
    .A(_021_),
    .B(_022_),
    .Y(Y[8])
  );
  AOI22X1 _101_ (
    .A(arith_o[9]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[9]),
    .Y(_023_)
  );
  AOI22X1 _102_ (
    .A(shift_o[9]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[9]),
    .Y(_024_)
  );
  NAND2X1 _103_ (
    .A(_023_),
    .B(_024_),
    .Y(Y[9])
  );
  AOI22X1 _104_ (
    .A(arith_o[10]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[10]),
    .Y(_025_)
  );
  AOI22X1 _105_ (
    .A(shift_o[10]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[10]),
    .Y(_026_)
  );
  NAND2X1 _106_ (
    .A(_025_),
    .B(_026_),
    .Y(Y[10])
  );
  AOI22X1 _107_ (
    .A(arith_o[11]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[11]),
    .Y(_027_)
  );
  AOI22X1 _108_ (
    .A(shift_o[11]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[11]),
    .Y(_028_)
  );
  NAND2X1 _109_ (
    .A(_027_),
    .B(_028_),
    .Y(Y[11])
  );
  AOI22X1 _110_ (
    .A(arith_o[12]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[12]),
    .Y(_029_)
  );
  AOI22X1 _111_ (
    .A(shift_o[12]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[12]),
    .Y(_030_)
  );
  NAND2X1 _112_ (
    .A(_029_),
    .B(_030_),
    .Y(Y[12])
  );
  AOI22X1 _113_ (
    .A(arith_o[13]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[13]),
    .Y(_031_)
  );
  AOI22X1 _114_ (
    .A(shift_o[13]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[13]),
    .Y(_032_)
  );
  NAND2X1 _115_ (
    .A(_031_),
    .B(_032_),
    .Y(Y[13])
  );
  AOI22X1 _116_ (
    .A(arith_o[14]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[14]),
    .Y(_033_)
  );
  AOI22X1 _117_ (
    .A(shift_o[14]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[14]),
    .Y(_034_)
  );
  NAND2X1 _118_ (
    .A(_033_),
    .B(_034_),
    .Y(Y[14])
  );
  AOI22X1 _119_ (
    .A(arith_o[15]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[15]),
    .Y(_035_)
  );
  AOI22X1 _120_ (
    .A(shift_o[15]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[15]),
    .Y(_036_)
  );
  NAND2X1 _121_ (
    .A(_035_),
    .B(_036_),
    .Y(Y[15])
  );
  AOI22X1 _122_ (
    .A(arith_o[16]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[16]),
    .Y(_037_)
  );
  AOI22X1 _123_ (
    .A(shift_o[16]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[16]),
    .Y(_038_)
  );
  NAND2X1 _124_ (
    .A(_037_),
    .B(_038_),
    .Y(Y[16])
  );
  AOI22X1 _125_ (
    .A(arith_o[17]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[17]),
    .Y(_039_)
  );
  AOI22X1 _126_ (
    .A(shift_o[17]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[17]),
    .Y(_040_)
  );
  NAND2X1 _127_ (
    .A(_039_),
    .B(_040_),
    .Y(Y[17])
  );
  AOI22X1 _128_ (
    .A(arith_o[18]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[18]),
    .Y(_041_)
  );
  AOI22X1 _129_ (
    .A(shift_o[18]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[18]),
    .Y(_042_)
  );
  NAND2X1 _130_ (
    .A(_041_),
    .B(_042_),
    .Y(Y[18])
  );
  AOI22X1 _131_ (
    .A(arith_o[19]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[19]),
    .Y(_043_)
  );
  AOI22X1 _132_ (
    .A(shift_o[19]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[19]),
    .Y(_044_)
  );
  NAND2X1 _133_ (
    .A(_043_),
    .B(_044_),
    .Y(Y[19])
  );
  AOI22X1 _134_ (
    .A(arith_o[20]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[20]),
    .Y(_045_)
  );
  AOI22X1 _135_ (
    .A(shift_o[20]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[20]),
    .Y(_046_)
  );
  NAND2X1 _136_ (
    .A(_045_),
    .B(_046_),
    .Y(Y[20])
  );
  AOI22X1 _137_ (
    .A(arith_o[21]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[21]),
    .Y(_047_)
  );
  AOI22X1 _138_ (
    .A(shift_o[21]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[21]),
    .Y(_048_)
  );
  NAND2X1 _139_ (
    .A(_047_),
    .B(_048_),
    .Y(Y[21])
  );
  AOI22X1 _140_ (
    .A(arith_o[22]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[22]),
    .Y(_049_)
  );
  AOI22X1 _141_ (
    .A(shift_o[22]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[22]),
    .Y(_050_)
  );
  NAND2X1 _142_ (
    .A(_049_),
    .B(_050_),
    .Y(Y[22])
  );
  AOI22X1 _143_ (
    .A(arith_o[23]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[23]),
    .Y(_051_)
  );
  AOI22X1 _144_ (
    .A(shift_o[23]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[23]),
    .Y(_052_)
  );
  NAND2X1 _145_ (
    .A(_051_),
    .B(_052_),
    .Y(Y[23])
  );
  AOI22X1 _146_ (
    .A(arith_o[24]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[24]),
    .Y(_053_)
  );
  AOI22X1 _147_ (
    .A(shift_o[24]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[24]),
    .Y(_054_)
  );
  NAND2X1 _148_ (
    .A(_053_),
    .B(_054_),
    .Y(Y[24])
  );
  AOI22X1 _149_ (
    .A(arith_o[25]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[25]),
    .Y(_055_)
  );
  AOI22X1 _150_ (
    .A(shift_o[25]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[25]),
    .Y(_056_)
  );
  NAND2X1 _151_ (
    .A(_055_),
    .B(_056_),
    .Y(Y[25])
  );
  AOI22X1 _152_ (
    .A(arith_o[26]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[26]),
    .Y(_057_)
  );
  AOI22X1 _153_ (
    .A(shift_o[26]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[26]),
    .Y(_058_)
  );
  NAND2X1 _154_ (
    .A(_057_),
    .B(_058_),
    .Y(Y[26])
  );
  AOI22X1 _155_ (
    .A(arith_o[27]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[27]),
    .Y(_059_)
  );
  AOI22X1 _156_ (
    .A(shift_o[27]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[27]),
    .Y(_060_)
  );
  NAND2X1 _157_ (
    .A(_059_),
    .B(_060_),
    .Y(Y[27])
  );
  AOI22X1 _158_ (
    .A(arith_o[28]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[28]),
    .Y(_061_)
  );
  AOI22X1 _159_ (
    .A(shift_o[28]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[28]),
    .Y(_062_)
  );
  NAND2X1 _160_ (
    .A(_061_),
    .B(_062_),
    .Y(Y[28])
  );
  AOI22X1 _161_ (
    .A(arith_o[29]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[29]),
    .Y(_063_)
  );
  AOI22X1 _162_ (
    .A(shift_o[29]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[29]),
    .Y(_064_)
  );
  NAND2X1 _163_ (
    .A(_063_),
    .B(_064_),
    .Y(Y[29])
  );
  AOI22X1 _164_ (
    .A(arith_o[30]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[30]),
    .Y(_065_)
  );
  AOI22X1 _165_ (
    .A(shift_o[30]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[30]),
    .Y(_066_)
  );
  NAND2X1 _166_ (
    .A(_065_),
    .B(_066_),
    .Y(Y[30])
  );
  AOI22X1 _167_ (
    .A(arith_o[31]),
    .B(_001_),
    .C(_005_),
    .D(cmp_o[31]),
    .Y(_067_)
  );
  AOI22X1 _168_ (
    .A(shift_o[31]),
    .B(_002_),
    .C(_004_),
    .D(bool_o[31]),
    .Y(_068_)
  );
  NAND2X1 _169_ (
    .A(_067_),
    .B(_068_),
    .Y(Y[31])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/alu.sv:13.7-13.73" *)
  arith ARTH (
    .A(A),
    .AFN(FN[0]),
    .B(B),
    .S(arith_o),
    .n(n),
    .v(v),
    .z(z)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/alu.sv:15.11-15.56" *)
  bool_func BOOL (
    .A(A),
    .B(B),
    .BFN(FN[3:0]),
    .Y(bool_o)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/alu.sv:16.5-16.55" *)
  cmp CMP (
    .CFN(FN[2:1]),
    .Y(cmp_o),
    .n(n),
    .v(v),
    .z(z)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/alu.sv:14.9-14.61" *)
  shifter SHIFT (
    .A(A),
    .B(B[4:0]),
    .SFN(FN[1:0]),
    .Y(shift_o)
  );
endmodule

(* src = "source/alu/arith.sv:1.1-22.10" *)
module arith(A, B, AFN, S, z, v, n);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  (* src = "source/alu/arith.sv:2.23-2.24" *)
  input [31:0] A;
  wire [31:0] A;
  (* src = "source/alu/arith.sv:3.17-3.20" *)
  input AFN;
  wire AFN;
  (* src = "source/alu/arith.sv:2.26-2.27" *)
  input [31:0] B;
  wire [31:0] B;
  (* src = "source/alu/arith.sv:9.13-9.17" *)
  wire [31:0] B_in;
  (* src = "source/alu/arith.sv:5.24-5.25" *)
  output [31:0] S;
  wire [31:0] S;
  (* src = "source/alu/arith.sv:6.24-6.25" *)
  output n;
  wire n;
  (* src = "source/alu/arith.sv:6.21-6.22" *)
  output v;
  wire v;
  (* src = "source/alu/arith.sv:6.18-6.19" *)
  output z;
  wire z;
  INVX1 _22_ (
    .A(S[31]),
    .Y(_00_)
  );
  OR2X1 _23_ (
    .A(S[20]),
    .B(S[23]),
    .Y(_01_)
  );
  OR2X1 _24_ (
    .A(S[5]),
    .B(S[6]),
    .Y(_02_)
  );
  OR2X1 _25_ (
    .A(S[9]),
    .B(S[10]),
    .Y(_03_)
  );
  NOR2X1 _26_ (
    .A(S[4]),
    .B(S[7]),
    .Y(_04_)
  );
  NOR3X1 _27_ (
    .A(S[17]),
    .B(S[18]),
    .C(S[29]),
    .Y(_05_)
  );
  NOR3X1 _28_ (
    .A(S[16]),
    .B(S[19]),
    .C(S[28]),
    .Y(_06_)
  );
  NAND2X1 _29_ (
    .A(_05_),
    .B(_06_),
    .Y(_07_)
  );
  NOR2X1 _30_ (
    .A(S[3]),
    .B(S[12]),
    .Y(_08_)
  );
  NOR3X1 _31_ (
    .A(S[0]),
    .B(S[15]),
    .C(_02_),
    .Y(_09_)
  );
  NOR3X1 _32_ (
    .A(S[25]),
    .B(S[26]),
    .C(S[31]),
    .Y(_10_)
  );
  NAND3X1 _33_ (
    .A(_08_),
    .B(_09_),
    .C(_10_),
    .Y(_11_)
  );
  NOR3X1 _34_ (
    .A(S[24]),
    .B(S[27]),
    .C(S[30]),
    .Y(_12_)
  );
  NOR2X1 _35_ (
    .A(S[2]),
    .B(S[13]),
    .Y(_13_)
  );
  NAND2X1 _36_ (
    .A(_04_),
    .B(_13_),
    .Y(_14_)
  );
  NOR3X1 _37_ (
    .A(S[11]),
    .B(S[21]),
    .C(_14_),
    .Y(_15_)
  );
  NOR3X1 _38_ (
    .A(S[1]),
    .B(S[14]),
    .C(_01_),
    .Y(_16_)
  );
  NOR3X1 _39_ (
    .A(S[8]),
    .B(S[22]),
    .C(_03_),
    .Y(_17_)
  );
  AND2X1 _40_ (
    .A(_16_),
    .B(_17_),
    .Y(_18_)
  );
  NAND3X1 _41_ (
    .A(_12_),
    .B(_15_),
    .C(_18_),
    .Y(_19_)
  );
  NOR3X1 _42_ (
    .A(_07_),
    .B(_11_),
    .C(_19_),
    .Y(z)
  );
  XOR2X1 _43_ (
    .A(AFN),
    .B(B[31]),
    .Y(B_in[31])
  );
  XOR2X1 _44_ (
    .A(B[0]),
    .B(AFN),
    .Y(B_in[0])
  );
  XOR2X1 _45_ (
    .A(AFN),
    .B(B[1]),
    .Y(B_in[1])
  );
  XOR2X1 _46_ (
    .A(AFN),
    .B(B[2]),
    .Y(B_in[2])
  );
  XOR2X1 _47_ (
    .A(AFN),
    .B(B[3]),
    .Y(B_in[3])
  );
  XOR2X1 _48_ (
    .A(AFN),
    .B(B[4]),
    .Y(B_in[4])
  );
  XOR2X1 _49_ (
    .A(AFN),
    .B(B[5]),
    .Y(B_in[5])
  );
  XOR2X1 _50_ (
    .A(AFN),
    .B(B[6]),
    .Y(B_in[6])
  );
  XOR2X1 _51_ (
    .A(AFN),
    .B(B[7]),
    .Y(B_in[7])
  );
  XOR2X1 _52_ (
    .A(AFN),
    .B(B[8]),
    .Y(B_in[8])
  );
  XOR2X1 _53_ (
    .A(AFN),
    .B(B[9]),
    .Y(B_in[9])
  );
  XOR2X1 _54_ (
    .A(AFN),
    .B(B[10]),
    .Y(B_in[10])
  );
  XOR2X1 _55_ (
    .A(AFN),
    .B(B[11]),
    .Y(B_in[11])
  );
  XOR2X1 _56_ (
    .A(AFN),
    .B(B[12]),
    .Y(B_in[12])
  );
  XOR2X1 _57_ (
    .A(AFN),
    .B(B[13]),
    .Y(B_in[13])
  );
  XOR2X1 _58_ (
    .A(AFN),
    .B(B[14]),
    .Y(B_in[14])
  );
  XOR2X1 _59_ (
    .A(AFN),
    .B(B[15]),
    .Y(B_in[15])
  );
  XOR2X1 _60_ (
    .A(AFN),
    .B(B[16]),
    .Y(B_in[16])
  );
  XOR2X1 _61_ (
    .A(AFN),
    .B(B[17]),
    .Y(B_in[17])
  );
  XOR2X1 _62_ (
    .A(AFN),
    .B(B[18]),
    .Y(B_in[18])
  );
  XOR2X1 _63_ (
    .A(AFN),
    .B(B[19]),
    .Y(B_in[19])
  );
  XOR2X1 _64_ (
    .A(AFN),
    .B(B[20]),
    .Y(B_in[20])
  );
  XOR2X1 _65_ (
    .A(AFN),
    .B(B[21]),
    .Y(B_in[21])
  );
  XOR2X1 _66_ (
    .A(AFN),
    .B(B[22]),
    .Y(B_in[22])
  );
  XOR2X1 _67_ (
    .A(AFN),
    .B(B[23]),
    .Y(B_in[23])
  );
  XOR2X1 _68_ (
    .A(AFN),
    .B(B[24]),
    .Y(B_in[24])
  );
  XOR2X1 _69_ (
    .A(AFN),
    .B(B[25]),
    .Y(B_in[25])
  );
  XOR2X1 _70_ (
    .A(AFN),
    .B(B[26]),
    .Y(B_in[26])
  );
  XOR2X1 _71_ (
    .A(AFN),
    .B(B[27]),
    .Y(B_in[27])
  );
  XOR2X1 _72_ (
    .A(AFN),
    .B(B[28]),
    .Y(B_in[28])
  );
  XOR2X1 _73_ (
    .A(AFN),
    .B(B[29]),
    .Y(B_in[29])
  );
  XOR2X1 _74_ (
    .A(AFN),
    .B(B[30]),
    .Y(B_in[30])
  );
  NAND3X1 _75_ (
    .A(_00_),
    .B(A[31]),
    .C(B_in[31]),
    .Y(_20_)
  );
  OR2X1 _76_ (
    .A(_00_),
    .B(A[31]),
    .Y(_21_)
  );
  OAI21X1 _77_ (
    .A(B_in[31]),
    .B(_21_),
    .C(_20_),
    .Y(v)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/arith.sv:14.5-14.45" *)
  cla ADDER (
    .A(A),
    .B(B_in),
    .Cin(AFN),
    .S(S)
  );
  assign n = S[31];
endmodule

(* src = "source/alu/bool_func.sv:1.1-12.10" *)
module bool_func(A, B, BFN, Y);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  (* src = "source/alu/bool_func.sv:2.24-2.25" *)
  input [31:0] A;
  wire [31:0] A;
  (* src = "source/alu/bool_func.sv:2.27-2.28" *)
  input [31:0] B;
  wire [31:0] B;
  (* src = "source/alu/bool_func.sv:3.23-3.26" *)
  input [3:0] BFN;
  wire [3:0] BFN;
  (* src = "source/alu/bool_func.sv:5.24-5.25" *)
  output [31:0] Y;
  wire [31:0] Y;
  MUX2X1 _064_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[31]),
    .Y(_000_)
  );
  MUX2X1 _065_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[31]),
    .Y(_001_)
  );
  MUX2X1 _066_ (
    .A(_000_),
    .B(_001_),
    .S(B[31]),
    .Y(Y[31])
  );
  MUX2X1 _067_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[30]),
    .Y(_002_)
  );
  MUX2X1 _068_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[30]),
    .Y(_003_)
  );
  MUX2X1 _069_ (
    .A(_002_),
    .B(_003_),
    .S(B[30]),
    .Y(Y[30])
  );
  MUX2X1 _070_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[29]),
    .Y(_004_)
  );
  MUX2X1 _071_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[29]),
    .Y(_005_)
  );
  MUX2X1 _072_ (
    .A(_004_),
    .B(_005_),
    .S(B[29]),
    .Y(Y[29])
  );
  MUX2X1 _073_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[28]),
    .Y(_006_)
  );
  MUX2X1 _074_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[28]),
    .Y(_007_)
  );
  MUX2X1 _075_ (
    .A(_006_),
    .B(_007_),
    .S(B[28]),
    .Y(Y[28])
  );
  MUX2X1 _076_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[27]),
    .Y(_008_)
  );
  MUX2X1 _077_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[27]),
    .Y(_009_)
  );
  MUX2X1 _078_ (
    .A(_008_),
    .B(_009_),
    .S(B[27]),
    .Y(Y[27])
  );
  MUX2X1 _079_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[26]),
    .Y(_010_)
  );
  MUX2X1 _080_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[26]),
    .Y(_011_)
  );
  MUX2X1 _081_ (
    .A(_010_),
    .B(_011_),
    .S(B[26]),
    .Y(Y[26])
  );
  MUX2X1 _082_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[25]),
    .Y(_012_)
  );
  MUX2X1 _083_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[25]),
    .Y(_013_)
  );
  MUX2X1 _084_ (
    .A(_012_),
    .B(_013_),
    .S(B[25]),
    .Y(Y[25])
  );
  MUX2X1 _085_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[24]),
    .Y(_014_)
  );
  MUX2X1 _086_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[24]),
    .Y(_015_)
  );
  MUX2X1 _087_ (
    .A(_014_),
    .B(_015_),
    .S(B[24]),
    .Y(Y[24])
  );
  MUX2X1 _088_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[23]),
    .Y(_016_)
  );
  MUX2X1 _089_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[23]),
    .Y(_017_)
  );
  MUX2X1 _090_ (
    .A(_016_),
    .B(_017_),
    .S(B[23]),
    .Y(Y[23])
  );
  MUX2X1 _091_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[22]),
    .Y(_018_)
  );
  MUX2X1 _092_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[22]),
    .Y(_019_)
  );
  MUX2X1 _093_ (
    .A(_018_),
    .B(_019_),
    .S(B[22]),
    .Y(Y[22])
  );
  MUX2X1 _094_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[21]),
    .Y(_020_)
  );
  MUX2X1 _095_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[21]),
    .Y(_021_)
  );
  MUX2X1 _096_ (
    .A(_020_),
    .B(_021_),
    .S(B[21]),
    .Y(Y[21])
  );
  MUX2X1 _097_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[20]),
    .Y(_022_)
  );
  MUX2X1 _098_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[20]),
    .Y(_023_)
  );
  MUX2X1 _099_ (
    .A(_022_),
    .B(_023_),
    .S(B[20]),
    .Y(Y[20])
  );
  MUX2X1 _100_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[19]),
    .Y(_024_)
  );
  MUX2X1 _101_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[19]),
    .Y(_025_)
  );
  MUX2X1 _102_ (
    .A(_024_),
    .B(_025_),
    .S(B[19]),
    .Y(Y[19])
  );
  MUX2X1 _103_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[18]),
    .Y(_026_)
  );
  MUX2X1 _104_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[18]),
    .Y(_027_)
  );
  MUX2X1 _105_ (
    .A(_026_),
    .B(_027_),
    .S(B[18]),
    .Y(Y[18])
  );
  MUX2X1 _106_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[17]),
    .Y(_028_)
  );
  MUX2X1 _107_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[17]),
    .Y(_029_)
  );
  MUX2X1 _108_ (
    .A(_028_),
    .B(_029_),
    .S(B[17]),
    .Y(Y[17])
  );
  MUX2X1 _109_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[16]),
    .Y(_030_)
  );
  MUX2X1 _110_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[16]),
    .Y(_031_)
  );
  MUX2X1 _111_ (
    .A(_030_),
    .B(_031_),
    .S(B[16]),
    .Y(Y[16])
  );
  MUX2X1 _112_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[15]),
    .Y(_032_)
  );
  MUX2X1 _113_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[15]),
    .Y(_033_)
  );
  MUX2X1 _114_ (
    .A(_032_),
    .B(_033_),
    .S(B[15]),
    .Y(Y[15])
  );
  MUX2X1 _115_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[14]),
    .Y(_034_)
  );
  MUX2X1 _116_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[14]),
    .Y(_035_)
  );
  MUX2X1 _117_ (
    .A(_034_),
    .B(_035_),
    .S(B[14]),
    .Y(Y[14])
  );
  MUX2X1 _118_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[13]),
    .Y(_036_)
  );
  MUX2X1 _119_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[13]),
    .Y(_037_)
  );
  MUX2X1 _120_ (
    .A(_036_),
    .B(_037_),
    .S(B[13]),
    .Y(Y[13])
  );
  MUX2X1 _121_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[12]),
    .Y(_038_)
  );
  MUX2X1 _122_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[12]),
    .Y(_039_)
  );
  MUX2X1 _123_ (
    .A(_038_),
    .B(_039_),
    .S(B[12]),
    .Y(Y[12])
  );
  MUX2X1 _124_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[11]),
    .Y(_040_)
  );
  MUX2X1 _125_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[11]),
    .Y(_041_)
  );
  MUX2X1 _126_ (
    .A(_040_),
    .B(_041_),
    .S(B[11]),
    .Y(Y[11])
  );
  MUX2X1 _127_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[10]),
    .Y(_042_)
  );
  MUX2X1 _128_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[10]),
    .Y(_043_)
  );
  MUX2X1 _129_ (
    .A(_042_),
    .B(_043_),
    .S(B[10]),
    .Y(Y[10])
  );
  MUX2X1 _130_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[9]),
    .Y(_044_)
  );
  MUX2X1 _131_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[9]),
    .Y(_045_)
  );
  MUX2X1 _132_ (
    .A(_044_),
    .B(_045_),
    .S(B[9]),
    .Y(Y[9])
  );
  MUX2X1 _133_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[8]),
    .Y(_046_)
  );
  MUX2X1 _134_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[8]),
    .Y(_047_)
  );
  MUX2X1 _135_ (
    .A(_046_),
    .B(_047_),
    .S(B[8]),
    .Y(Y[8])
  );
  MUX2X1 _136_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[7]),
    .Y(_048_)
  );
  MUX2X1 _137_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[7]),
    .Y(_049_)
  );
  MUX2X1 _138_ (
    .A(_048_),
    .B(_049_),
    .S(B[7]),
    .Y(Y[7])
  );
  MUX2X1 _139_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[6]),
    .Y(_050_)
  );
  MUX2X1 _140_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[6]),
    .Y(_051_)
  );
  MUX2X1 _141_ (
    .A(_050_),
    .B(_051_),
    .S(B[6]),
    .Y(Y[6])
  );
  MUX2X1 _142_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[5]),
    .Y(_052_)
  );
  MUX2X1 _143_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[5]),
    .Y(_053_)
  );
  MUX2X1 _144_ (
    .A(_052_),
    .B(_053_),
    .S(B[5]),
    .Y(Y[5])
  );
  MUX2X1 _145_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[4]),
    .Y(_054_)
  );
  MUX2X1 _146_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[4]),
    .Y(_055_)
  );
  MUX2X1 _147_ (
    .A(_054_),
    .B(_055_),
    .S(B[4]),
    .Y(Y[4])
  );
  MUX2X1 _148_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[3]),
    .Y(_056_)
  );
  MUX2X1 _149_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[3]),
    .Y(_057_)
  );
  MUX2X1 _150_ (
    .A(_056_),
    .B(_057_),
    .S(B[3]),
    .Y(Y[3])
  );
  MUX2X1 _151_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[2]),
    .Y(_058_)
  );
  MUX2X1 _152_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[2]),
    .Y(_059_)
  );
  MUX2X1 _153_ (
    .A(_058_),
    .B(_059_),
    .S(B[2]),
    .Y(Y[2])
  );
  MUX2X1 _154_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[1]),
    .Y(_060_)
  );
  MUX2X1 _155_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[1]),
    .Y(_061_)
  );
  MUX2X1 _156_ (
    .A(_060_),
    .B(_061_),
    .S(B[1]),
    .Y(Y[1])
  );
  MUX2X1 _157_ (
    .A(BFN[3]),
    .B(BFN[2]),
    .S(A[0]),
    .Y(_062_)
  );
  MUX2X1 _158_ (
    .A(BFN[1]),
    .B(BFN[0]),
    .S(A[0]),
    .Y(_063_)
  );
  MUX2X1 _159_ (
    .A(_062_),
    .B(_063_),
    .S(B[0]),
    .Y(Y[0])
  );
endmodule

(* src = "source/alu/cla/cla.sv:2.1-94.10" *)
module cla(A, B, Cin, S);
  (* src = "source/alu/cla/cla.sv:3.23-3.24" *)
  input [31:0] A;
  wire [31:0] A;
  (* src = "source/alu/cla/cla.sv:3.26-3.27" *)
  input [31:0] B;
  wire [31:0] B;
  (* src = "source/alu/cla/cla.sv:4.17-4.20" *)
  input Cin;
  wire Cin;
  (* src = "source/alu/cla/cla.sv:5.24-5.25" *)
  output [31:0] S;
  wire [31:0] S;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[0] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[10] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[11] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[12] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[13] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[14] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[15] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[16] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[17] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[18] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[19] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[1] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[20] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[21] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[22] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[23] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[24] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[25] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[26] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[27] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[28] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[29] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[2] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[30] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[31] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[3] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[4] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[5] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[6] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[7] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[8] ;
  (* src = "source/alu/cla/cla.sv:16.7-16.12" *)
  wire \cin_1[9] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[0] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[10] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[11] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[12] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[13] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[14] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[15] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[1] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[2] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[3] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[4] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[5] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[6] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[7] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[8] ;
  (* src = "source/alu/cla/cla.sv:17.7-17.12" *)
  wire \cin_2[9] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[0] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[1] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[2] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[3] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[4] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[5] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[6] ;
  (* src = "source/alu/cla/cla.sv:18.7-18.12" *)
  wire \cin_3[7] ;
  (* src = "source/alu/cla/cla.sv:19.7-19.12" *)
  wire \cin_4[0] ;
  (* src = "source/alu/cla/cla.sv:19.7-19.12" *)
  wire \cin_4[1] ;
  (* src = "source/alu/cla/cla.sv:19.7-19.12" *)
  wire \cin_4[2] ;
  (* src = "source/alu/cla/cla.sv:19.7-19.12" *)
  wire \cin_4[3] ;
  (* src = "source/alu/cla/cla.sv:20.7-20.12" *)
  wire \cin_5[0] ;
  (* src = "source/alu/cla/cla.sv:20.7-20.12" *)
  wire \cin_5[1] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[0] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[10] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[11] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[12] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[13] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[14] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[15] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[16] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[17] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[18] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[19] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[1] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[20] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[21] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[22] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[23] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[24] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[25] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[26] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[27] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[28] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[29] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[2] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[30] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[31] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[3] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[4] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[5] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[6] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[7] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[8] ;
  (* src = "source/alu/cla/cla.sv:9.12-9.16" *)
  wire [1:0] \gp_1[9] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[0] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[10] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[11] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[12] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[13] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[14] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[15] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[1] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[2] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[3] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[4] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[5] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[6] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[7] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[8] ;
  (* src = "source/alu/cla/cla.sv:10.12-10.16" *)
  wire [1:0] \gp_2[9] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[0] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[1] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[2] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[3] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[4] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[5] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[6] ;
  (* src = "source/alu/cla/cla.sv:11.12-11.16" *)
  wire [1:0] \gp_3[7] ;
  (* src = "source/alu/cla/cla.sv:12.12-12.16" *)
  wire [1:0] \gp_4[0] ;
  (* src = "source/alu/cla/cla.sv:12.12-12.16" *)
  wire [1:0] \gp_4[1] ;
  (* src = "source/alu/cla/cla.sv:12.12-12.16" *)
  wire [1:0] \gp_4[2] ;
  (* src = "source/alu/cla/cla.sv:12.12-12.16" *)
  wire [1:0] \gp_4[3] ;
  (* src = "source/alu/cla/cla.sv:13.12-13.16" *)
  wire [1:0] \gp_5[0] ;
  (* src = "source/alu/cla/cla.sv:13.12-13.16" *)
  wire [1:0] \gp_5[1] ;
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:73.10-74.59" *)
  gp_block L6 (
    .cin(Cin),
    .cin_h(\cin_5[1] ),
    .cin_l(\cin_5[0] ),
    .g_h(\gp_5[1] [1]),
    .g_l(\gp_5[0] [1]),
    .p_h(\gp_5[1] [0]),
    .p_l(\gp_5[0] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[0].L1  (
    .a(A[0]),
    .b(B[0]),
    .cin(\cin_1[0] ),
    .g(\gp_1[0] [1]),
    .p(\gp_1[0] [0]),
    .s(S[0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[10].L1  (
    .a(A[10]),
    .b(B[10]),
    .cin(\cin_1[10] ),
    .g(\gp_1[10] [1]),
    .p(\gp_1[10] [0]),
    .s(S[10])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[11].L1  (
    .a(A[11]),
    .b(B[11]),
    .cin(\cin_1[11] ),
    .g(\gp_1[11] [1]),
    .p(\gp_1[11] [0]),
    .s(S[11])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[12].L1  (
    .a(A[12]),
    .b(B[12]),
    .cin(\cin_1[12] ),
    .g(\gp_1[12] [1]),
    .p(\gp_1[12] [0]),
    .s(S[12])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[13].L1  (
    .a(A[13]),
    .b(B[13]),
    .cin(\cin_1[13] ),
    .g(\gp_1[13] [1]),
    .p(\gp_1[13] [0]),
    .s(S[13])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[14].L1  (
    .a(A[14]),
    .b(B[14]),
    .cin(\cin_1[14] ),
    .g(\gp_1[14] [1]),
    .p(\gp_1[14] [0]),
    .s(S[14])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[15].L1  (
    .a(A[15]),
    .b(B[15]),
    .cin(\cin_1[15] ),
    .g(\gp_1[15] [1]),
    .p(\gp_1[15] [0]),
    .s(S[15])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[16].L1  (
    .a(A[16]),
    .b(B[16]),
    .cin(\cin_1[16] ),
    .g(\gp_1[16] [1]),
    .p(\gp_1[16] [0]),
    .s(S[16])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[17].L1  (
    .a(A[17]),
    .b(B[17]),
    .cin(\cin_1[17] ),
    .g(\gp_1[17] [1]),
    .p(\gp_1[17] [0]),
    .s(S[17])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[18].L1  (
    .a(A[18]),
    .b(B[18]),
    .cin(\cin_1[18] ),
    .g(\gp_1[18] [1]),
    .p(\gp_1[18] [0]),
    .s(S[18])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[19].L1  (
    .a(A[19]),
    .b(B[19]),
    .cin(\cin_1[19] ),
    .g(\gp_1[19] [1]),
    .p(\gp_1[19] [0]),
    .s(S[19])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[1].L1  (
    .a(A[1]),
    .b(B[1]),
    .cin(\cin_1[1] ),
    .g(\gp_1[1] [1]),
    .p(\gp_1[1] [0]),
    .s(S[1])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[20].L1  (
    .a(A[20]),
    .b(B[20]),
    .cin(\cin_1[20] ),
    .g(\gp_1[20] [1]),
    .p(\gp_1[20] [0]),
    .s(S[20])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[21].L1  (
    .a(A[21]),
    .b(B[21]),
    .cin(\cin_1[21] ),
    .g(\gp_1[21] [1]),
    .p(\gp_1[21] [0]),
    .s(S[21])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[22].L1  (
    .a(A[22]),
    .b(B[22]),
    .cin(\cin_1[22] ),
    .g(\gp_1[22] [1]),
    .p(\gp_1[22] [0]),
    .s(S[22])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[23].L1  (
    .a(A[23]),
    .b(B[23]),
    .cin(\cin_1[23] ),
    .g(\gp_1[23] [1]),
    .p(\gp_1[23] [0]),
    .s(S[23])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[24].L1  (
    .a(A[24]),
    .b(B[24]),
    .cin(\cin_1[24] ),
    .g(\gp_1[24] [1]),
    .p(\gp_1[24] [0]),
    .s(S[24])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[25].L1  (
    .a(A[25]),
    .b(B[25]),
    .cin(\cin_1[25] ),
    .g(\gp_1[25] [1]),
    .p(\gp_1[25] [0]),
    .s(S[25])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[26].L1  (
    .a(A[26]),
    .b(B[26]),
    .cin(\cin_1[26] ),
    .g(\gp_1[26] [1]),
    .p(\gp_1[26] [0]),
    .s(S[26])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[27].L1  (
    .a(A[27]),
    .b(B[27]),
    .cin(\cin_1[27] ),
    .g(\gp_1[27] [1]),
    .p(\gp_1[27] [0]),
    .s(S[27])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[28].L1  (
    .a(A[28]),
    .b(B[28]),
    .cin(\cin_1[28] ),
    .g(\gp_1[28] [1]),
    .p(\gp_1[28] [0]),
    .s(S[28])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[29].L1  (
    .a(A[29]),
    .b(B[29]),
    .cin(\cin_1[29] ),
    .g(\gp_1[29] [1]),
    .p(\gp_1[29] [0]),
    .s(S[29])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[2].L1  (
    .a(A[2]),
    .b(B[2]),
    .cin(\cin_1[2] ),
    .g(\gp_1[2] [1]),
    .p(\gp_1[2] [0]),
    .s(S[2])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[30].L1  (
    .a(A[30]),
    .b(B[30]),
    .cin(\cin_1[30] ),
    .g(\gp_1[30] [1]),
    .p(\gp_1[30] [0]),
    .s(S[30])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[31].L1  (
    .a(A[31]),
    .b(B[31]),
    .cin(\cin_1[31] ),
    .g(\gp_1[31] [1]),
    .p(\gp_1[31] [0]),
    .s(S[31])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[3].L1  (
    .a(A[3]),
    .b(B[3]),
    .cin(\cin_1[3] ),
    .g(\gp_1[3] [1]),
    .p(\gp_1[3] [0]),
    .s(S[3])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[4].L1  (
    .a(A[4]),
    .b(B[4]),
    .cin(\cin_1[4] ),
    .g(\gp_1[4] [1]),
    .p(\gp_1[4] [0]),
    .s(S[4])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[5].L1  (
    .a(A[5]),
    .b(B[5]),
    .cin(\cin_1[5] ),
    .g(\gp_1[5] [1]),
    .p(\gp_1[5] [0]),
    .s(S[5])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[6].L1  (
    .a(A[6]),
    .b(B[6]),
    .cin(\cin_1[6] ),
    .g(\gp_1[6] [1]),
    .p(\gp_1[6] [0]),
    .s(S[6])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[7].L1  (
    .a(A[7]),
    .b(B[7]),
    .cin(\cin_1[7] ),
    .g(\gp_1[7] [1]),
    .p(\gp_1[7] [0]),
    .s(S[7])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[8].L1  (
    .a(A[8]),
    .b(B[8]),
    .cin(\cin_1[8] ),
    .g(\gp_1[8] [1]),
    .p(\gp_1[8] [0]),
    .s(S[8])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:27.20-27.100" *)
  unit_adder \genblk1[9].L1  (
    .a(A[9]),
    .b(B[9]),
    .cin(\cin_1[9] ),
    .g(\gp_1[9] [1]),
    .p(\gp_1[9] [0]),
    .s(S[9])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[0].L2  (
    .cin(\cin_2[0] ),
    .cin_h(\cin_1[1] ),
    .cin_l(\cin_1[0] ),
    .g_h(\gp_1[1] [1]),
    .g_hl(\gp_2[0] [1]),
    .g_l(\gp_1[0] [1]),
    .p_h(\gp_1[1] [0]),
    .p_hl(\gp_2[0] [0]),
    .p_l(\gp_1[0] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[10].L2  (
    .cin(\cin_2[10] ),
    .cin_h(\cin_1[21] ),
    .cin_l(\cin_1[20] ),
    .g_h(\gp_1[21] [1]),
    .g_hl(\gp_2[10] [1]),
    .g_l(\gp_1[20] [1]),
    .p_h(\gp_1[21] [0]),
    .p_hl(\gp_2[10] [0]),
    .p_l(\gp_1[20] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[11].L2  (
    .cin(\cin_2[11] ),
    .cin_h(\cin_1[23] ),
    .cin_l(\cin_1[22] ),
    .g_h(\gp_1[23] [1]),
    .g_hl(\gp_2[11] [1]),
    .g_l(\gp_1[22] [1]),
    .p_h(\gp_1[23] [0]),
    .p_hl(\gp_2[11] [0]),
    .p_l(\gp_1[22] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[12].L2  (
    .cin(\cin_2[12] ),
    .cin_h(\cin_1[25] ),
    .cin_l(\cin_1[24] ),
    .g_h(\gp_1[25] [1]),
    .g_hl(\gp_2[12] [1]),
    .g_l(\gp_1[24] [1]),
    .p_h(\gp_1[25] [0]),
    .p_hl(\gp_2[12] [0]),
    .p_l(\gp_1[24] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[13].L2  (
    .cin(\cin_2[13] ),
    .cin_h(\cin_1[27] ),
    .cin_l(\cin_1[26] ),
    .g_h(\gp_1[27] [1]),
    .g_hl(\gp_2[13] [1]),
    .g_l(\gp_1[26] [1]),
    .p_h(\gp_1[27] [0]),
    .p_hl(\gp_2[13] [0]),
    .p_l(\gp_1[26] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[14].L2  (
    .cin(\cin_2[14] ),
    .cin_h(\cin_1[29] ),
    .cin_l(\cin_1[28] ),
    .g_h(\gp_1[29] [1]),
    .g_hl(\gp_2[14] [1]),
    .g_l(\gp_1[28] [1]),
    .p_h(\gp_1[29] [0]),
    .p_hl(\gp_2[14] [0]),
    .p_l(\gp_1[28] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[15].L2  (
    .cin(\cin_2[15] ),
    .cin_h(\cin_1[31] ),
    .cin_l(\cin_1[30] ),
    .g_h(\gp_1[31] [1]),
    .g_hl(\gp_2[15] [1]),
    .g_l(\gp_1[30] [1]),
    .p_h(\gp_1[31] [0]),
    .p_hl(\gp_2[15] [0]),
    .p_l(\gp_1[30] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[1].L2  (
    .cin(\cin_2[1] ),
    .cin_h(\cin_1[3] ),
    .cin_l(\cin_1[2] ),
    .g_h(\gp_1[3] [1]),
    .g_hl(\gp_2[1] [1]),
    .g_l(\gp_1[2] [1]),
    .p_h(\gp_1[3] [0]),
    .p_hl(\gp_2[1] [0]),
    .p_l(\gp_1[2] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[2].L2  (
    .cin(\cin_2[2] ),
    .cin_h(\cin_1[5] ),
    .cin_l(\cin_1[4] ),
    .g_h(\gp_1[5] [1]),
    .g_hl(\gp_2[2] [1]),
    .g_l(\gp_1[4] [1]),
    .p_h(\gp_1[5] [0]),
    .p_hl(\gp_2[2] [0]),
    .p_l(\gp_1[4] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[3].L2  (
    .cin(\cin_2[3] ),
    .cin_h(\cin_1[7] ),
    .cin_l(\cin_1[6] ),
    .g_h(\gp_1[7] [1]),
    .g_hl(\gp_2[3] [1]),
    .g_l(\gp_1[6] [1]),
    .p_h(\gp_1[7] [0]),
    .p_hl(\gp_2[3] [0]),
    .p_l(\gp_1[6] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[4].L2  (
    .cin(\cin_2[4] ),
    .cin_h(\cin_1[9] ),
    .cin_l(\cin_1[8] ),
    .g_h(\gp_1[9] [1]),
    .g_hl(\gp_2[4] [1]),
    .g_l(\gp_1[8] [1]),
    .p_h(\gp_1[9] [0]),
    .p_hl(\gp_2[4] [0]),
    .p_l(\gp_1[8] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[5].L2  (
    .cin(\cin_2[5] ),
    .cin_h(\cin_1[11] ),
    .cin_l(\cin_1[10] ),
    .g_h(\gp_1[11] [1]),
    .g_hl(\gp_2[5] [1]),
    .g_l(\gp_1[10] [1]),
    .p_h(\gp_1[11] [0]),
    .p_hl(\gp_2[5] [0]),
    .p_l(\gp_1[10] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[6].L2  (
    .cin(\cin_2[6] ),
    .cin_h(\cin_1[13] ),
    .cin_l(\cin_1[12] ),
    .g_h(\gp_1[13] [1]),
    .g_hl(\gp_2[6] [1]),
    .g_l(\gp_1[12] [1]),
    .p_h(\gp_1[13] [0]),
    .p_hl(\gp_2[6] [0]),
    .p_l(\gp_1[12] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[7].L2  (
    .cin(\cin_2[7] ),
    .cin_h(\cin_1[15] ),
    .cin_l(\cin_1[14] ),
    .g_h(\gp_1[15] [1]),
    .g_hl(\gp_2[7] [1]),
    .g_l(\gp_1[14] [1]),
    .p_h(\gp_1[15] [0]),
    .p_hl(\gp_2[7] [0]),
    .p_l(\gp_1[14] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[8].L2  (
    .cin(\cin_2[8] ),
    .cin_h(\cin_1[17] ),
    .cin_l(\cin_1[16] ),
    .g_h(\gp_1[17] [1]),
    .g_hl(\gp_2[8] [1]),
    .g_l(\gp_1[16] [1]),
    .p_h(\gp_1[17] [0]),
    .p_hl(\gp_2[8] [0]),
    .p_l(\gp_1[16] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:35.18-37.58" *)
  gp_block \genblk2[9].L2  (
    .cin(\cin_2[9] ),
    .cin_h(\cin_1[19] ),
    .cin_l(\cin_1[18] ),
    .g_h(\gp_1[19] [1]),
    .g_hl(\gp_2[9] [1]),
    .g_l(\gp_1[18] [1]),
    .p_h(\gp_1[19] [0]),
    .p_hl(\gp_2[9] [0]),
    .p_l(\gp_1[18] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[0].L3  (
    .cin(\cin_3[0] ),
    .cin_h(\cin_2[1] ),
    .cin_l(\cin_2[0] ),
    .g_h(\gp_2[1] [1]),
    .g_hl(\gp_3[0] [1]),
    .g_l(\gp_2[0] [1]),
    .p_h(\gp_2[1] [0]),
    .p_hl(\gp_3[0] [0]),
    .p_l(\gp_2[0] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[1].L3  (
    .cin(\cin_3[1] ),
    .cin_h(\cin_2[3] ),
    .cin_l(\cin_2[2] ),
    .g_h(\gp_2[3] [1]),
    .g_hl(\gp_3[1] [1]),
    .g_l(\gp_2[2] [1]),
    .p_h(\gp_2[3] [0]),
    .p_hl(\gp_3[1] [0]),
    .p_l(\gp_2[2] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[2].L3  (
    .cin(\cin_3[2] ),
    .cin_h(\cin_2[5] ),
    .cin_l(\cin_2[4] ),
    .g_h(\gp_2[5] [1]),
    .g_hl(\gp_3[2] [1]),
    .g_l(\gp_2[4] [1]),
    .p_h(\gp_2[5] [0]),
    .p_hl(\gp_3[2] [0]),
    .p_l(\gp_2[4] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[3].L3  (
    .cin(\cin_3[3] ),
    .cin_h(\cin_2[7] ),
    .cin_l(\cin_2[6] ),
    .g_h(\gp_2[7] [1]),
    .g_hl(\gp_3[3] [1]),
    .g_l(\gp_2[6] [1]),
    .p_h(\gp_2[7] [0]),
    .p_hl(\gp_3[3] [0]),
    .p_l(\gp_2[6] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[4].L3  (
    .cin(\cin_3[4] ),
    .cin_h(\cin_2[9] ),
    .cin_l(\cin_2[8] ),
    .g_h(\gp_2[9] [1]),
    .g_hl(\gp_3[4] [1]),
    .g_l(\gp_2[8] [1]),
    .p_h(\gp_2[9] [0]),
    .p_hl(\gp_3[4] [0]),
    .p_l(\gp_2[8] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[5].L3  (
    .cin(\cin_3[5] ),
    .cin_h(\cin_2[11] ),
    .cin_l(\cin_2[10] ),
    .g_h(\gp_2[11] [1]),
    .g_hl(\gp_3[5] [1]),
    .g_l(\gp_2[10] [1]),
    .p_h(\gp_2[11] [0]),
    .p_hl(\gp_3[5] [0]),
    .p_l(\gp_2[10] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[6].L3  (
    .cin(\cin_3[6] ),
    .cin_h(\cin_2[13] ),
    .cin_l(\cin_2[12] ),
    .g_h(\gp_2[13] [1]),
    .g_hl(\gp_3[6] [1]),
    .g_l(\gp_2[12] [1]),
    .p_h(\gp_2[13] [0]),
    .p_hl(\gp_3[6] [0]),
    .p_l(\gp_2[12] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:45.18-47.58" *)
  gp_block \genblk3[7].L3  (
    .cin(\cin_3[7] ),
    .cin_h(\cin_2[15] ),
    .cin_l(\cin_2[14] ),
    .g_h(\gp_2[15] [1]),
    .g_hl(\gp_3[7] [1]),
    .g_l(\gp_2[14] [1]),
    .p_h(\gp_2[15] [0]),
    .p_hl(\gp_3[7] [0]),
    .p_l(\gp_2[14] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:55.18-57.58" *)
  gp_block \genblk4[0].L4  (
    .cin(\cin_4[0] ),
    .cin_h(\cin_3[1] ),
    .cin_l(\cin_3[0] ),
    .g_h(\gp_3[1] [1]),
    .g_hl(\gp_4[0] [1]),
    .g_l(\gp_3[0] [1]),
    .p_h(\gp_3[1] [0]),
    .p_hl(\gp_4[0] [0]),
    .p_l(\gp_3[0] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:55.18-57.58" *)
  gp_block \genblk4[1].L4  (
    .cin(\cin_4[1] ),
    .cin_h(\cin_3[3] ),
    .cin_l(\cin_3[2] ),
    .g_h(\gp_3[3] [1]),
    .g_hl(\gp_4[1] [1]),
    .g_l(\gp_3[2] [1]),
    .p_h(\gp_3[3] [0]),
    .p_hl(\gp_4[1] [0]),
    .p_l(\gp_3[2] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:55.18-57.58" *)
  gp_block \genblk4[2].L4  (
    .cin(\cin_4[2] ),
    .cin_h(\cin_3[5] ),
    .cin_l(\cin_3[4] ),
    .g_h(\gp_3[5] [1]),
    .g_hl(\gp_4[2] [1]),
    .g_l(\gp_3[4] [1]),
    .p_h(\gp_3[5] [0]),
    .p_hl(\gp_4[2] [0]),
    .p_l(\gp_3[4] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:55.18-57.58" *)
  gp_block \genblk4[3].L4  (
    .cin(\cin_4[3] ),
    .cin_h(\cin_3[7] ),
    .cin_l(\cin_3[6] ),
    .g_h(\gp_3[7] [1]),
    .g_hl(\gp_4[3] [1]),
    .g_l(\gp_3[6] [1]),
    .p_h(\gp_3[7] [0]),
    .p_hl(\gp_4[3] [0]),
    .p_l(\gp_3[6] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:65.18-67.58" *)
  gp_block \genblk5[0].L5  (
    .cin(\cin_5[0] ),
    .cin_h(\cin_4[1] ),
    .cin_l(\cin_4[0] ),
    .g_h(\gp_4[1] [1]),
    .g_hl(\gp_5[0] [1]),
    .g_l(\gp_4[0] [1]),
    .p_h(\gp_4[1] [0]),
    .p_hl(\gp_5[0] [0]),
    .p_l(\gp_4[0] [0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "source/alu/cla/cla.sv:65.18-67.58" *)
  gp_block \genblk5[1].L5  (
    .cin(\cin_5[1] ),
    .cin_h(\cin_4[3] ),
    .cin_l(\cin_4[2] ),
    .g_h(\gp_4[3] [1]),
    .g_hl(\gp_5[1] [1]),
    .g_l(\gp_4[2] [1]),
    .p_h(\gp_4[3] [0]),
    .p_hl(\gp_5[1] [0]),
    .p_l(\gp_4[2] [0])
  );
endmodule

(* src = "source/alu/cmp.sv:1.1-18.10" *)
module cmp(z, v, n, CFN, Y);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  (* src = "source/alu/cmp.sv:3.22-3.25" *)
  input [1:0] CFN;
  wire [1:0] CFN;
  (* src = "source/alu/cmp.sv:5.24-5.25" *)
  output [31:0] Y;
  wire [31:0] Y;
  (* src = "source/alu/cmp.sv:2.23-2.24" *)
  input n;
  wire n;
  (* src = "source/alu/cmp.sv:2.20-2.21" *)
  input v;
  wire v;
  (* src = "source/alu/cmp.sv:2.17-2.18" *)
  input z;
  wire z;
  INVX1 _4_ (
    .A(CFN[1]),
    .Y(_1_)
  );
  OAI21X1 _5_ (
    .A(_1_),
    .B(CFN[0]),
    .C(z),
    .Y(_2_)
  );
  AND2X1 _6_ (
    .A(_1_),
    .B(CFN[0]),
    .Y(_3_)
  );
  XNOR2X1 _7_ (
    .A(n),
    .B(v),
    .Y(_0_)
  );
  OAI21X1 _8_ (
    .A(_3_),
    .B(_0_),
    .C(_2_),
    .Y(Y[0])
  );
  assign Y[31:1] = 31'h00000000;
endmodule

(* src = "source/alu/cla/gp_block.sv:2.1-15.10" *)
module gp_block(g_l, g_h, p_l, p_h, cin, g_hl, p_hl, cin_h, cin_l);
  wire _0_;
  wire _1_;
  (* src = "source/alu/cla/gp_block.sv:3.37-3.40" *)
  input cin;
  wire cin;
  (* src = "source/alu/cla/gp_block.sv:5.18-5.23" *)
  output cin_h;
  wire cin_h;
  (* src = "source/alu/cla/gp_block.sv:5.25-5.30" *)
  output cin_l;
  wire cin_l;
  (* src = "source/alu/cla/gp_block.sv:3.22-3.25" *)
  input g_h;
  wire g_h;
  (* src = "source/alu/cla/gp_block.sv:4.18-4.22" *)
  output g_hl;
  wire g_hl;
  (* src = "source/alu/cla/gp_block.sv:3.17-3.20" *)
  input g_l;
  wire g_l;
  (* src = "source/alu/cla/gp_block.sv:3.32-3.35" *)
  input p_h;
  wire p_h;
  (* src = "source/alu/cla/gp_block.sv:4.24-4.28" *)
  output p_hl;
  wire p_hl;
  (* src = "source/alu/cla/gp_block.sv:3.27-3.30" *)
  input p_l;
  wire p_l;
  AOI21X1 _2_ (
    .A(g_l),
    .B(p_h),
    .C(g_h),
    .Y(_1_)
  );
  INVX1 _3_ (
    .A(_1_),
    .Y(g_hl)
  );
  AND2X1 _4_ (
    .A(p_h),
    .B(p_l),
    .Y(p_hl)
  );
  AOI21X1 _5_ (
    .A(p_l),
    .B(cin),
    .C(g_l),
    .Y(_0_)
  );
  INVX1 _6_ (
    .A(_0_),
    .Y(cin_h)
  );
  assign cin_l = cin;
endmodule

(* src = "source/alu/shifter/shifter.sv:12.1-56.10" *)
module shifter(A, B, SFN, Y);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  (* src = "source/alu/shifter/shifter.sv:13.23-13.24" *)
  input [31:0] A;
  wire [31:0] A;
  (* src = "source/alu/shifter/shifter.sv:14.22-14.23" *)
  input [4:0] B;
  wire [4:0] B;
  (* src = "source/alu/shifter/shifter.sv:15.23-15.26" *)
  input [1:0] SFN;
  wire [1:0] SFN;
  (* src = "source/alu/shifter/shifter.sv:16.24-16.25" *)
  output [31:0] Y;
  wire [31:0] Y;
  INVX1 _240_ (
    .A(A[0]),
    .Y(_212_)
  );
  INVX1 _241_ (
    .A(A[1]),
    .Y(_213_)
  );
  INVX1 _242_ (
    .A(A[2]),
    .Y(_214_)
  );
  INVX1 _243_ (
    .A(A[3]),
    .Y(_215_)
  );
  INVX1 _244_ (
    .A(A[4]),
    .Y(_216_)
  );
  MUX2X1 _245_ (
    .A(A[1]),
    .B(A[30]),
    .S(SFN[0]),
    .Y(_217_)
  );
  MUX2X1 _246_ (
    .A(A[0]),
    .B(A[31]),
    .S(SFN[0]),
    .Y(_218_)
  );
  MUX2X1 _247_ (
    .A(_217_),
    .B(_218_),
    .S(B[0]),
    .Y(_219_)
  );
  MUX2X1 _248_ (
    .A(A[2]),
    .B(A[29]),
    .S(SFN[0]),
    .Y(_220_)
  );
  MUX2X1 _249_ (
    .A(A[3]),
    .B(A[28]),
    .S(SFN[0]),
    .Y(_221_)
  );
  INVX1 _250_ (
    .A(_221_),
    .Y(_222_)
  );
  MUX2X1 _251_ (
    .A(_221_),
    .B(_220_),
    .S(B[0]),
    .Y(_223_)
  );
  MUX2X1 _252_ (
    .A(_223_),
    .B(_219_),
    .S(B[1]),
    .Y(_224_)
  );
  MUX2X1 _253_ (
    .A(A[4]),
    .B(A[27]),
    .S(SFN[0]),
    .Y(_225_)
  );
  MUX2X1 _254_ (
    .A(A[5]),
    .B(A[26]),
    .S(SFN[0]),
    .Y(_226_)
  );
  INVX1 _255_ (
    .A(_226_),
    .Y(_227_)
  );
  MUX2X1 _256_ (
    .A(_226_),
    .B(_225_),
    .S(B[0]),
    .Y(_228_)
  );
  MUX2X1 _257_ (
    .A(A[6]),
    .B(A[25]),
    .S(SFN[0]),
    .Y(_229_)
  );
  MUX2X1 _258_ (
    .A(A[7]),
    .B(A[24]),
    .S(SFN[0]),
    .Y(_230_)
  );
  INVX1 _259_ (
    .A(_230_),
    .Y(_231_)
  );
  MUX2X1 _260_ (
    .A(_230_),
    .B(_229_),
    .S(B[0]),
    .Y(_232_)
  );
  MUX2X1 _261_ (
    .A(_232_),
    .B(_228_),
    .S(B[1]),
    .Y(_233_)
  );
  MUX2X1 _262_ (
    .A(_233_),
    .B(_224_),
    .S(B[2]),
    .Y(_234_)
  );
  MUX2X1 _263_ (
    .A(A[8]),
    .B(A[23]),
    .S(SFN[0]),
    .Y(_235_)
  );
  MUX2X1 _264_ (
    .A(A[9]),
    .B(A[22]),
    .S(SFN[0]),
    .Y(_236_)
  );
  MUX2X1 _265_ (
    .A(_236_),
    .B(_235_),
    .S(B[0]),
    .Y(_237_)
  );
  MUX2X1 _266_ (
    .A(A[10]),
    .B(A[21]),
    .S(SFN[0]),
    .Y(_238_)
  );
  MUX2X1 _267_ (
    .A(A[11]),
    .B(A[20]),
    .S(SFN[0]),
    .Y(_239_)
  );
  MUX2X1 _268_ (
    .A(_239_),
    .B(_238_),
    .S(B[0]),
    .Y(_000_)
  );
  MUX2X1 _269_ (
    .A(_000_),
    .B(_237_),
    .S(B[1]),
    .Y(_001_)
  );
  MUX2X1 _270_ (
    .A(A[12]),
    .B(A[19]),
    .S(SFN[0]),
    .Y(_002_)
  );
  MUX2X1 _271_ (
    .A(A[13]),
    .B(A[18]),
    .S(SFN[0]),
    .Y(_003_)
  );
  MUX2X1 _272_ (
    .A(_003_),
    .B(_002_),
    .S(B[0]),
    .Y(_004_)
  );
  MUX2X1 _273_ (
    .A(A[14]),
    .B(A[17]),
    .S(SFN[0]),
    .Y(_005_)
  );
  MUX2X1 _274_ (
    .A(A[15]),
    .B(A[16]),
    .S(SFN[0]),
    .Y(_006_)
  );
  MUX2X1 _275_ (
    .A(_006_),
    .B(_005_),
    .S(B[0]),
    .Y(_007_)
  );
  MUX2X1 _276_ (
    .A(_007_),
    .B(_004_),
    .S(B[1]),
    .Y(_008_)
  );
  INVX1 _277_ (
    .A(_008_),
    .Y(_009_)
  );
  MUX2X1 _278_ (
    .A(_008_),
    .B(_001_),
    .S(B[2]),
    .Y(_010_)
  );
  INVX1 _279_ (
    .A(_010_),
    .Y(_011_)
  );
  MUX2X1 _280_ (
    .A(_010_),
    .B(_234_),
    .S(B[3]),
    .Y(_012_)
  );
  INVX1 _281_ (
    .A(_012_),
    .Y(_013_)
  );
  MUX2X1 _282_ (
    .A(A[16]),
    .B(A[15]),
    .S(SFN[0]),
    .Y(_014_)
  );
  MUX2X1 _283_ (
    .A(A[17]),
    .B(A[14]),
    .S(SFN[0]),
    .Y(_015_)
  );
  MUX2X1 _284_ (
    .A(_015_),
    .B(_014_),
    .S(B[0]),
    .Y(_016_)
  );
  INVX1 _285_ (
    .A(_016_),
    .Y(_017_)
  );
  MUX2X1 _286_ (
    .A(A[18]),
    .B(A[13]),
    .S(SFN[0]),
    .Y(_018_)
  );
  MUX2X1 _287_ (
    .A(A[19]),
    .B(A[12]),
    .S(SFN[0]),
    .Y(_019_)
  );
  INVX1 _288_ (
    .A(_019_),
    .Y(_020_)
  );
  MUX2X1 _289_ (
    .A(_019_),
    .B(_018_),
    .S(B[0]),
    .Y(_021_)
  );
  NAND2X1 _290_ (
    .A(B[1]),
    .B(_021_),
    .Y(_022_)
  );
  OAI21X1 _291_ (
    .A(B[1]),
    .B(_017_),
    .C(_022_),
    .Y(_023_)
  );
  MUX2X1 _292_ (
    .A(A[20]),
    .B(A[11]),
    .S(SFN[0]),
    .Y(_024_)
  );
  MUX2X1 _293_ (
    .A(A[21]),
    .B(A[10]),
    .S(SFN[0]),
    .Y(_025_)
  );
  INVX1 _294_ (
    .A(_025_),
    .Y(_026_)
  );
  MUX2X1 _295_ (
    .A(_025_),
    .B(_024_),
    .S(B[0]),
    .Y(_027_)
  );
  INVX1 _296_ (
    .A(_027_),
    .Y(_028_)
  );
  MUX2X1 _297_ (
    .A(A[22]),
    .B(A[9]),
    .S(SFN[0]),
    .Y(_029_)
  );
  INVX1 _298_ (
    .A(_029_),
    .Y(_030_)
  );
  MUX2X1 _299_ (
    .A(A[23]),
    .B(A[8]),
    .S(SFN[0]),
    .Y(_031_)
  );
  INVX1 _300_ (
    .A(_031_),
    .Y(_032_)
  );
  MUX2X1 _301_ (
    .A(_032_),
    .B(_030_),
    .S(B[0]),
    .Y(_033_)
  );
  MUX2X1 _302_ (
    .A(_033_),
    .B(_028_),
    .S(B[1]),
    .Y(_034_)
  );
  MUX2X1 _303_ (
    .A(_034_),
    .B(_023_),
    .S(B[2]),
    .Y(_035_)
  );
  MUX2X1 _304_ (
    .A(A[24]),
    .B(A[7]),
    .S(SFN[0]),
    .Y(_036_)
  );
  INVX1 _305_ (
    .A(_036_),
    .Y(_037_)
  );
  MUX2X1 _306_ (
    .A(A[25]),
    .B(A[6]),
    .S(SFN[0]),
    .Y(_038_)
  );
  INVX1 _307_ (
    .A(_038_),
    .Y(_039_)
  );
  MUX2X1 _308_ (
    .A(_039_),
    .B(_037_),
    .S(B[0]),
    .Y(_040_)
  );
  MUX2X1 _309_ (
    .A(A[26]),
    .B(A[5]),
    .S(SFN[0]),
    .Y(_041_)
  );
  INVX1 _310_ (
    .A(_041_),
    .Y(_042_)
  );
  NAND2X1 _311_ (
    .A(SFN[0]),
    .B(A[27]),
    .Y(_043_)
  );
  OAI21X1 _312_ (
    .A(SFN[0]),
    .B(_216_),
    .C(_043_),
    .Y(_044_)
  );
  MUX2X1 _313_ (
    .A(_044_),
    .B(_042_),
    .S(B[0]),
    .Y(_045_)
  );
  MUX2X1 _314_ (
    .A(_045_),
    .B(_040_),
    .S(B[1]),
    .Y(_046_)
  );
  NAND2X1 _315_ (
    .A(SFN[0]),
    .B(A[28]),
    .Y(_047_)
  );
  OAI21X1 _316_ (
    .A(SFN[0]),
    .B(_215_),
    .C(_047_),
    .Y(_048_)
  );
  NAND2X1 _317_ (
    .A(SFN[0]),
    .B(A[29]),
    .Y(_049_)
  );
  OAI21X1 _318_ (
    .A(SFN[0]),
    .B(_214_),
    .C(_049_),
    .Y(_050_)
  );
  MUX2X1 _319_ (
    .A(_050_),
    .B(_048_),
    .S(B[0]),
    .Y(_051_)
  );
  NAND2X1 _320_ (
    .A(SFN[0]),
    .B(A[30]),
    .Y(_052_)
  );
  OAI21X1 _321_ (
    .A(SFN[0]),
    .B(_213_),
    .C(_052_),
    .Y(_053_)
  );
  NAND2X1 _322_ (
    .A(SFN[0]),
    .B(A[31]),
    .Y(_054_)
  );
  OAI21X1 _323_ (
    .A(SFN[0]),
    .B(_212_),
    .C(_054_),
    .Y(_055_)
  );
  MUX2X1 _324_ (
    .A(_055_),
    .B(_053_),
    .S(B[0]),
    .Y(_056_)
  );
  MUX2X1 _325_ (
    .A(_056_),
    .B(_051_),
    .S(B[1]),
    .Y(_057_)
  );
  MUX2X1 _326_ (
    .A(_057_),
    .B(_046_),
    .S(B[2]),
    .Y(_058_)
  );
  MUX2X1 _327_ (
    .A(_058_),
    .B(_035_),
    .S(B[3]),
    .Y(_059_)
  );
  MUX2X1 _328_ (
    .A(_059_),
    .B(_013_),
    .S(B[4]),
    .Y(_060_)
  );
  AND2X1 _329_ (
    .A(A[31]),
    .B(SFN[1]),
    .Y(_061_)
  );
  MUX2X1 _330_ (
    .A(_061_),
    .B(_055_),
    .S(B[0]),
    .Y(_062_)
  );
  NAND2X1 _331_ (
    .A(B[1]),
    .B(_061_),
    .Y(_063_)
  );
  OAI21X1 _332_ (
    .A(B[1]),
    .B(_062_),
    .C(_063_),
    .Y(_064_)
  );
  MUX2X1 _333_ (
    .A(_061_),
    .B(_064_),
    .S(B[2]),
    .Y(_065_)
  );
  NAND2X1 _334_ (
    .A(B[3]),
    .B(_061_),
    .Y(_066_)
  );
  OAI21X1 _335_ (
    .A(B[3]),
    .B(_065_),
    .C(_066_),
    .Y(_067_)
  );
  MUX2X1 _336_ (
    .A(_061_),
    .B(_067_),
    .S(B[4]),
    .Y(_068_)
  );
  MUX2X1 _337_ (
    .A(_068_),
    .B(_060_),
    .S(SFN[0]),
    .Y(Y[31])
  );
  MUX2X1 _338_ (
    .A(_220_),
    .B(_217_),
    .S(B[0]),
    .Y(_069_)
  );
  INVX1 _339_ (
    .A(_069_),
    .Y(_070_)
  );
  NAND2X1 _340_ (
    .A(B[0]),
    .B(_225_),
    .Y(_071_)
  );
  OAI21X1 _341_ (
    .A(B[0]),
    .B(_222_),
    .C(_071_),
    .Y(_072_)
  );
  MUX2X1 _342_ (
    .A(_072_),
    .B(_070_),
    .S(B[1]),
    .Y(_073_)
  );
  NAND2X1 _343_ (
    .A(B[0]),
    .B(_229_),
    .Y(_074_)
  );
  OAI21X1 _344_ (
    .A(B[0]),
    .B(_227_),
    .C(_074_),
    .Y(_075_)
  );
  NAND2X1 _345_ (
    .A(B[0]),
    .B(_235_),
    .Y(_076_)
  );
  OAI21X1 _346_ (
    .A(B[0]),
    .B(_231_),
    .C(_076_),
    .Y(_077_)
  );
  MUX2X1 _347_ (
    .A(_077_),
    .B(_075_),
    .S(B[1]),
    .Y(_078_)
  );
  MUX2X1 _348_ (
    .A(_078_),
    .B(_073_),
    .S(B[2]),
    .Y(_079_)
  );
  MUX2X1 _349_ (
    .A(_238_),
    .B(_236_),
    .S(B[0]),
    .Y(_080_)
  );
  INVX1 _350_ (
    .A(_080_),
    .Y(_081_)
  );
  MUX2X1 _351_ (
    .A(_002_),
    .B(_239_),
    .S(B[0]),
    .Y(_082_)
  );
  NAND2X1 _352_ (
    .A(B[1]),
    .B(_082_),
    .Y(_083_)
  );
  OAI21X1 _353_ (
    .A(B[1]),
    .B(_081_),
    .C(_083_),
    .Y(_084_)
  );
  MUX2X1 _354_ (
    .A(_005_),
    .B(_003_),
    .S(B[0]),
    .Y(_085_)
  );
  INVX1 _355_ (
    .A(_085_),
    .Y(_086_)
  );
  MUX2X1 _356_ (
    .A(_014_),
    .B(_006_),
    .S(B[0]),
    .Y(_087_)
  );
  NAND2X1 _357_ (
    .A(B[1]),
    .B(_087_),
    .Y(_088_)
  );
  OAI21X1 _358_ (
    .A(B[1]),
    .B(_086_),
    .C(_088_),
    .Y(_089_)
  );
  MUX2X1 _359_ (
    .A(_089_),
    .B(_084_),
    .S(B[2]),
    .Y(_090_)
  );
  MUX2X1 _360_ (
    .A(_090_),
    .B(_079_),
    .S(B[3]),
    .Y(_091_)
  );
  MUX2X1 _361_ (
    .A(_018_),
    .B(_015_),
    .S(B[0]),
    .Y(_092_)
  );
  INVX1 _362_ (
    .A(_092_),
    .Y(_093_)
  );
  NAND2X1 _363_ (
    .A(B[0]),
    .B(_024_),
    .Y(_094_)
  );
  OAI21X1 _364_ (
    .A(B[0]),
    .B(_020_),
    .C(_094_),
    .Y(_095_)
  );
  MUX2X1 _365_ (
    .A(_095_),
    .B(_093_),
    .S(B[1]),
    .Y(_096_)
  );
  MUX2X1 _366_ (
    .A(_030_),
    .B(_026_),
    .S(B[0]),
    .Y(_097_)
  );
  MUX2X1 _367_ (
    .A(_037_),
    .B(_032_),
    .S(B[0]),
    .Y(_098_)
  );
  MUX2X1 _368_ (
    .A(_098_),
    .B(_097_),
    .S(B[1]),
    .Y(_099_)
  );
  MUX2X1 _369_ (
    .A(_099_),
    .B(_096_),
    .S(B[2]),
    .Y(_100_)
  );
  MUX2X1 _370_ (
    .A(_042_),
    .B(_039_),
    .S(B[0]),
    .Y(_101_)
  );
  MUX2X1 _371_ (
    .A(_048_),
    .B(_044_),
    .S(B[0]),
    .Y(_102_)
  );
  MUX2X1 _372_ (
    .A(_102_),
    .B(_101_),
    .S(B[1]),
    .Y(_103_)
  );
  MUX2X1 _373_ (
    .A(_053_),
    .B(_050_),
    .S(B[0]),
    .Y(_104_)
  );
  MUX2X1 _374_ (
    .A(_062_),
    .B(_104_),
    .S(B[1]),
    .Y(_105_)
  );
  MUX2X1 _375_ (
    .A(_105_),
    .B(_103_),
    .S(B[2]),
    .Y(_106_)
  );
  MUX2X1 _376_ (
    .A(_106_),
    .B(_100_),
    .S(B[3]),
    .Y(_107_)
  );
  MUX2X1 _377_ (
    .A(_107_),
    .B(_091_),
    .S(B[4]),
    .Y(_108_)
  );
  OAI21X1 _378_ (
    .A(B[1]),
    .B(_056_),
    .C(_063_),
    .Y(_109_)
  );
  MUX2X1 _379_ (
    .A(_061_),
    .B(_109_),
    .S(B[2]),
    .Y(_110_)
  );
  OAI21X1 _380_ (
    .A(B[3]),
    .B(_110_),
    .C(_066_),
    .Y(_111_)
  );
  MUX2X1 _381_ (
    .A(_061_),
    .B(_111_),
    .S(B[4]),
    .Y(_112_)
  );
  MUX2X1 _382_ (
    .A(_112_),
    .B(_108_),
    .S(SFN[0]),
    .Y(Y[30])
  );
  MUX2X1 _383_ (
    .A(_228_),
    .B(_223_),
    .S(B[1]),
    .Y(_113_)
  );
  MUX2X1 _384_ (
    .A(_237_),
    .B(_232_),
    .S(B[1]),
    .Y(_114_)
  );
  MUX2X1 _385_ (
    .A(_114_),
    .B(_113_),
    .S(B[2]),
    .Y(_115_)
  );
  MUX2X1 _386_ (
    .A(_004_),
    .B(_000_),
    .S(B[1]),
    .Y(_116_)
  );
  MUX2X1 _387_ (
    .A(_016_),
    .B(_007_),
    .S(B[1]),
    .Y(_117_)
  );
  MUX2X1 _388_ (
    .A(_117_),
    .B(_116_),
    .S(B[2]),
    .Y(_118_)
  );
  INVX1 _389_ (
    .A(_118_),
    .Y(_119_)
  );
  MUX2X1 _390_ (
    .A(_118_),
    .B(_115_),
    .S(B[3]),
    .Y(_120_)
  );
  INVX1 _391_ (
    .A(_120_),
    .Y(_121_)
  );
  MUX2X1 _392_ (
    .A(_027_),
    .B(_021_),
    .S(B[1]),
    .Y(_122_)
  );
  INVX1 _393_ (
    .A(_122_),
    .Y(_123_)
  );
  MUX2X1 _394_ (
    .A(_040_),
    .B(_033_),
    .S(B[1]),
    .Y(_124_)
  );
  MUX2X1 _395_ (
    .A(_124_),
    .B(_123_),
    .S(B[2]),
    .Y(_125_)
  );
  MUX2X1 _396_ (
    .A(_051_),
    .B(_045_),
    .S(B[1]),
    .Y(_126_)
  );
  MUX2X1 _397_ (
    .A(_109_),
    .B(_126_),
    .S(B[2]),
    .Y(_127_)
  );
  MUX2X1 _398_ (
    .A(_127_),
    .B(_125_),
    .S(B[3]),
    .Y(_128_)
  );
  MUX2X1 _399_ (
    .A(_128_),
    .B(_121_),
    .S(B[4]),
    .Y(_129_)
  );
  MUX2X1 _400_ (
    .A(_061_),
    .B(_105_),
    .S(B[2]),
    .Y(_130_)
  );
  OAI21X1 _401_ (
    .A(B[3]),
    .B(_130_),
    .C(_066_),
    .Y(_131_)
  );
  MUX2X1 _402_ (
    .A(_061_),
    .B(_131_),
    .S(B[4]),
    .Y(_132_)
  );
  MUX2X1 _403_ (
    .A(_132_),
    .B(_129_),
    .S(SFN[0]),
    .Y(Y[29])
  );
  MUX2X1 _404_ (
    .A(_075_),
    .B(_072_),
    .S(B[1]),
    .Y(_133_)
  );
  MUX2X1 _405_ (
    .A(_081_),
    .B(_077_),
    .S(B[1]),
    .Y(_134_)
  );
  MUX2X1 _406_ (
    .A(_134_),
    .B(_133_),
    .S(B[2]),
    .Y(_135_)
  );
  MUX2X1 _407_ (
    .A(_085_),
    .B(_082_),
    .S(B[1]),
    .Y(_136_)
  );
  MUX2X1 _408_ (
    .A(_092_),
    .B(_087_),
    .S(B[1]),
    .Y(_137_)
  );
  INVX1 _409_ (
    .A(_137_),
    .Y(_138_)
  );
  MUX2X1 _410_ (
    .A(_137_),
    .B(_136_),
    .S(B[2]),
    .Y(_139_)
  );
  INVX1 _411_ (
    .A(_139_),
    .Y(_140_)
  );
  MUX2X1 _412_ (
    .A(_140_),
    .B(_135_),
    .S(B[3]),
    .Y(_141_)
  );
  MUX2X1 _413_ (
    .A(_097_),
    .B(_095_),
    .S(B[1]),
    .Y(_142_)
  );
  MUX2X1 _414_ (
    .A(_101_),
    .B(_098_),
    .S(B[1]),
    .Y(_143_)
  );
  MUX2X1 _415_ (
    .A(_143_),
    .B(_142_),
    .S(B[2]),
    .Y(_144_)
  );
  MUX2X1 _416_ (
    .A(_104_),
    .B(_102_),
    .S(B[1]),
    .Y(_145_)
  );
  MUX2X1 _417_ (
    .A(_064_),
    .B(_145_),
    .S(B[2]),
    .Y(_146_)
  );
  MUX2X1 _418_ (
    .A(_146_),
    .B(_144_),
    .S(B[3]),
    .Y(_147_)
  );
  MUX2X1 _419_ (
    .A(_147_),
    .B(_141_),
    .S(B[4]),
    .Y(_148_)
  );
  MUX2X1 _420_ (
    .A(_061_),
    .B(_057_),
    .S(B[2]),
    .Y(_149_)
  );
  OAI21X1 _421_ (
    .A(B[3]),
    .B(_149_),
    .C(_066_),
    .Y(_150_)
  );
  MUX2X1 _422_ (
    .A(_061_),
    .B(_150_),
    .S(B[4]),
    .Y(_151_)
  );
  MUX2X1 _423_ (
    .A(_151_),
    .B(_148_),
    .S(SFN[0]),
    .Y(Y[28])
  );
  MUX2X1 _424_ (
    .A(_001_),
    .B(_233_),
    .S(B[2]),
    .Y(_152_)
  );
  INVX1 _425_ (
    .A(_152_),
    .Y(_153_)
  );
  MUX2X1 _426_ (
    .A(_023_),
    .B(_009_),
    .S(B[2]),
    .Y(_154_)
  );
  MUX2X1 _427_ (
    .A(_154_),
    .B(_153_),
    .S(B[3]),
    .Y(_155_)
  );
  MUX2X1 _428_ (
    .A(_046_),
    .B(_034_),
    .S(B[2]),
    .Y(_156_)
  );
  MUX2X1 _429_ (
    .A(_149_),
    .B(_156_),
    .S(B[3]),
    .Y(_157_)
  );
  MUX2X1 _430_ (
    .A(_157_),
    .B(_155_),
    .S(B[4]),
    .Y(_158_)
  );
  OAI21X1 _431_ (
    .A(B[3]),
    .B(_146_),
    .C(_066_),
    .Y(_159_)
  );
  MUX2X1 _432_ (
    .A(_061_),
    .B(_159_),
    .S(B[4]),
    .Y(_160_)
  );
  MUX2X1 _433_ (
    .A(_160_),
    .B(_158_),
    .S(SFN[0]),
    .Y(Y[27])
  );
  MUX2X1 _434_ (
    .A(_084_),
    .B(_078_),
    .S(B[2]),
    .Y(_161_)
  );
  MUX2X1 _435_ (
    .A(_096_),
    .B(_089_),
    .S(B[2]),
    .Y(_162_)
  );
  MUX2X1 _436_ (
    .A(_162_),
    .B(_161_),
    .S(B[3]),
    .Y(_163_)
  );
  MUX2X1 _437_ (
    .A(_103_),
    .B(_099_),
    .S(B[2]),
    .Y(_164_)
  );
  MUX2X1 _438_ (
    .A(_130_),
    .B(_164_),
    .S(B[3]),
    .Y(_165_)
  );
  MUX2X1 _439_ (
    .A(_165_),
    .B(_163_),
    .S(B[4]),
    .Y(_166_)
  );
  OAI21X1 _440_ (
    .A(B[3]),
    .B(_127_),
    .C(_066_),
    .Y(_167_)
  );
  MUX2X1 _441_ (
    .A(_061_),
    .B(_167_),
    .S(B[4]),
    .Y(_168_)
  );
  MUX2X1 _442_ (
    .A(_168_),
    .B(_166_),
    .S(SFN[0]),
    .Y(Y[26])
  );
  MUX2X1 _443_ (
    .A(_116_),
    .B(_114_),
    .S(B[2]),
    .Y(_169_)
  );
  MUX2X1 _444_ (
    .A(_122_),
    .B(_117_),
    .S(B[2]),
    .Y(_170_)
  );
  INVX1 _445_ (
    .A(_170_),
    .Y(_171_)
  );
  MUX2X1 _446_ (
    .A(_170_),
    .B(_169_),
    .S(B[3]),
    .Y(_172_)
  );
  INVX1 _447_ (
    .A(_172_),
    .Y(_173_)
  );
  MUX2X1 _448_ (
    .A(_126_),
    .B(_124_),
    .S(B[2]),
    .Y(_174_)
  );
  MUX2X1 _449_ (
    .A(_110_),
    .B(_174_),
    .S(B[3]),
    .Y(_175_)
  );
  MUX2X1 _450_ (
    .A(_175_),
    .B(_173_),
    .S(B[4]),
    .Y(_176_)
  );
  OAI21X1 _451_ (
    .A(B[3]),
    .B(_106_),
    .C(_066_),
    .Y(_177_)
  );
  MUX2X1 _452_ (
    .A(_061_),
    .B(_177_),
    .S(B[4]),
    .Y(_178_)
  );
  MUX2X1 _453_ (
    .A(_178_),
    .B(_176_),
    .S(SFN[0]),
    .Y(Y[25])
  );
  NAND2X1 _454_ (
    .A(B[2]),
    .B(_136_),
    .Y(_179_)
  );
  OAI21X1 _455_ (
    .A(B[2]),
    .B(_134_),
    .C(_179_),
    .Y(_180_)
  );
  MUX2X1 _456_ (
    .A(_142_),
    .B(_138_),
    .S(B[2]),
    .Y(_181_)
  );
  MUX2X1 _457_ (
    .A(_181_),
    .B(_180_),
    .S(B[3]),
    .Y(_182_)
  );
  MUX2X1 _458_ (
    .A(_145_),
    .B(_143_),
    .S(B[2]),
    .Y(_183_)
  );
  MUX2X1 _459_ (
    .A(_065_),
    .B(_183_),
    .S(B[3]),
    .Y(_184_)
  );
  MUX2X1 _460_ (
    .A(_184_),
    .B(_182_),
    .S(B[4]),
    .Y(_185_)
  );
  OAI21X1 _461_ (
    .A(B[3]),
    .B(_058_),
    .C(_066_),
    .Y(_186_)
  );
  MUX2X1 _462_ (
    .A(_061_),
    .B(_186_),
    .S(B[4]),
    .Y(_187_)
  );
  MUX2X1 _463_ (
    .A(_187_),
    .B(_185_),
    .S(SFN[0]),
    .Y(Y[24])
  );
  MUX2X1 _464_ (
    .A(_035_),
    .B(_011_),
    .S(B[3]),
    .Y(_188_)
  );
  MUX2X1 _465_ (
    .A(_186_),
    .B(_188_),
    .S(B[4]),
    .Y(_189_)
  );
  MUX2X1 _466_ (
    .A(_061_),
    .B(_184_),
    .S(B[4]),
    .Y(_190_)
  );
  MUX2X1 _467_ (
    .A(_190_),
    .B(_189_),
    .S(SFN[0]),
    .Y(Y[23])
  );
  MUX2X1 _468_ (
    .A(_100_),
    .B(_090_),
    .S(B[3]),
    .Y(_191_)
  );
  MUX2X1 _469_ (
    .A(_177_),
    .B(_191_),
    .S(B[4]),
    .Y(_192_)
  );
  MUX2X1 _470_ (
    .A(_061_),
    .B(_175_),
    .S(B[4]),
    .Y(_193_)
  );
  MUX2X1 _471_ (
    .A(_193_),
    .B(_192_),
    .S(SFN[0]),
    .Y(Y[22])
  );
  MUX2X1 _472_ (
    .A(_125_),
    .B(_119_),
    .S(B[3]),
    .Y(_194_)
  );
  MUX2X1 _473_ (
    .A(_167_),
    .B(_194_),
    .S(B[4]),
    .Y(_195_)
  );
  MUX2X1 _474_ (
    .A(_061_),
    .B(_165_),
    .S(B[4]),
    .Y(_196_)
  );
  MUX2X1 _475_ (
    .A(_196_),
    .B(_195_),
    .S(SFN[0]),
    .Y(Y[21])
  );
  MUX2X1 _476_ (
    .A(_144_),
    .B(_140_),
    .S(B[3]),
    .Y(_197_)
  );
  MUX2X1 _477_ (
    .A(_159_),
    .B(_197_),
    .S(B[4]),
    .Y(_198_)
  );
  MUX2X1 _478_ (
    .A(_061_),
    .B(_157_),
    .S(B[4]),
    .Y(_199_)
  );
  MUX2X1 _479_ (
    .A(_199_),
    .B(_198_),
    .S(SFN[0]),
    .Y(Y[20])
  );
  MUX2X1 _480_ (
    .A(_156_),
    .B(_154_),
    .S(B[3]),
    .Y(_200_)
  );
  MUX2X1 _481_ (
    .A(_150_),
    .B(_200_),
    .S(B[4]),
    .Y(_201_)
  );
  MUX2X1 _482_ (
    .A(_061_),
    .B(_147_),
    .S(B[4]),
    .Y(_202_)
  );
  MUX2X1 _483_ (
    .A(_202_),
    .B(_201_),
    .S(SFN[0]),
    .Y(Y[19])
  );
  MUX2X1 _484_ (
    .A(_164_),
    .B(_162_),
    .S(B[3]),
    .Y(_203_)
  );
  MUX2X1 _485_ (
    .A(_131_),
    .B(_203_),
    .S(B[4]),
    .Y(_204_)
  );
  MUX2X1 _486_ (
    .A(_061_),
    .B(_128_),
    .S(B[4]),
    .Y(_205_)
  );
  MUX2X1 _487_ (
    .A(_205_),
    .B(_204_),
    .S(SFN[0]),
    .Y(Y[18])
  );
  MUX2X1 _488_ (
    .A(_174_),
    .B(_171_),
    .S(B[3]),
    .Y(_206_)
  );
  MUX2X1 _489_ (
    .A(_111_),
    .B(_206_),
    .S(B[4]),
    .Y(_207_)
  );
  MUX2X1 _490_ (
    .A(_061_),
    .B(_107_),
    .S(B[4]),
    .Y(_208_)
  );
  MUX2X1 _491_ (
    .A(_208_),
    .B(_207_),
    .S(SFN[0]),
    .Y(Y[17])
  );
  MUX2X1 _492_ (
    .A(_183_),
    .B(_181_),
    .S(B[3]),
    .Y(_209_)
  );
  MUX2X1 _493_ (
    .A(_067_),
    .B(_209_),
    .S(B[4]),
    .Y(_210_)
  );
  MUX2X1 _494_ (
    .A(_061_),
    .B(_059_),
    .S(B[4]),
    .Y(_211_)
  );
  MUX2X1 _495_ (
    .A(_211_),
    .B(_210_),
    .S(SFN[0]),
    .Y(Y[16])
  );
  MUX2X1 _496_ (
    .A(_210_),
    .B(_211_),
    .S(SFN[0]),
    .Y(Y[15])
  );
  MUX2X1 _497_ (
    .A(_207_),
    .B(_208_),
    .S(SFN[0]),
    .Y(Y[14])
  );
  MUX2X1 _498_ (
    .A(_204_),
    .B(_205_),
    .S(SFN[0]),
    .Y(Y[13])
  );
  MUX2X1 _499_ (
    .A(_201_),
    .B(_202_),
    .S(SFN[0]),
    .Y(Y[12])
  );
  MUX2X1 _500_ (
    .A(_198_),
    .B(_199_),
    .S(SFN[0]),
    .Y(Y[11])
  );
  MUX2X1 _501_ (
    .A(_195_),
    .B(_196_),
    .S(SFN[0]),
    .Y(Y[10])
  );
  MUX2X1 _502_ (
    .A(_192_),
    .B(_193_),
    .S(SFN[0]),
    .Y(Y[9])
  );
  MUX2X1 _503_ (
    .A(_189_),
    .B(_190_),
    .S(SFN[0]),
    .Y(Y[8])
  );
  MUX2X1 _504_ (
    .A(_185_),
    .B(_187_),
    .S(SFN[0]),
    .Y(Y[7])
  );
  MUX2X1 _505_ (
    .A(_176_),
    .B(_178_),
    .S(SFN[0]),
    .Y(Y[6])
  );
  MUX2X1 _506_ (
    .A(_166_),
    .B(_168_),
    .S(SFN[0]),
    .Y(Y[5])
  );
  MUX2X1 _507_ (
    .A(_158_),
    .B(_160_),
    .S(SFN[0]),
    .Y(Y[4])
  );
  MUX2X1 _508_ (
    .A(_148_),
    .B(_151_),
    .S(SFN[0]),
    .Y(Y[3])
  );
  MUX2X1 _509_ (
    .A(_129_),
    .B(_132_),
    .S(SFN[0]),
    .Y(Y[2])
  );
  MUX2X1 _510_ (
    .A(_108_),
    .B(_112_),
    .S(SFN[0]),
    .Y(Y[1])
  );
  MUX2X1 _511_ (
    .A(_060_),
    .B(_068_),
    .S(SFN[0]),
    .Y(Y[0])
  );
endmodule

(* src = "source/alu/cla/unit_adder.sv:5.1-17.10" *)
module unit_adder(a, b, cin, g, p, s, cout);
  wire _0_;
  wire _1_;
  wire _2_;
  (* src = "source/alu/cla/unit_adder.sv:6.17-6.18" *)
  input a;
  wire a;
  (* src = "source/alu/cla/unit_adder.sv:6.20-6.21" *)
  input b;
  wire b;
  (* src = "source/alu/cla/unit_adder.sv:6.23-6.26" *)
  input cin;
  wire cin;
  (* src = "source/alu/cla/unit_adder.sv:7.27-7.31" *)
  output cout;
  wire cout;
  (* src = "source/alu/cla/unit_adder.sv:7.18-7.19" *)
  output g;
  wire g;
  (* src = "source/alu/cla/unit_adder.sv:7.21-7.22" *)
  output p;
  wire p;
  (* src = "source/alu/cla/unit_adder.sv:7.24-7.25" *)
  output s;
  wire s;
  INVX1 _3_ (
    .A(cin),
    .Y(_1_)
  );
  NAND2X1 _4_ (
    .A(a),
    .B(b),
    .Y(_2_)
  );
  INVX1 _5_ (
    .A(_2_),
    .Y(g)
  );
  XNOR2X1 _6_ (
    .A(a),
    .B(b),
    .Y(_0_)
  );
  INVX1 _7_ (
    .A(_0_),
    .Y(p)
  );
  XNOR2X1 _8_ (
    .A(cin),
    .B(_0_),
    .Y(s)
  );
  OAI21X1 _9_ (
    .A(_1_),
    .B(_0_),
    .C(_2_),
    .Y(cout)
  );
endmodule
